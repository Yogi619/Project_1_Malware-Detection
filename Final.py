#!/usr/bin/env python3
# coding: utf-8

# In[10]:


import pandas as pd

from sklearn.preprocessing import OneHotEncoder
from sklearn.preprocessing import LabelEncoder
from numpy import array
from numpy import argmax
import numpy as np
import os, signal
import joblib

# reading given csv file 
# and creating dataframe
websites = pd.read_csv("topfile.txt", header = None, error_bad_lines=False)
  
# adding column headings
websites.columns = ['PID', 'USER', 'PR','NI','VIRT','RES','SHR','s','%CPU','%MEM','TIME+','COMMAND']

websites = websites.dropna()

websites1 = websites[["PR","NI","%CPU","%MEM","COMMAND"]]


enc = OneHotEncoder()
values = array(websites1["COMMAND"])
PR_Col = array(websites1["PR"])

label_encoder = LabelEncoder()
integer_encoded = label_encoder.fit_transform(PR_Col)
integer_encoded1 = label_encoder.fit_transform(values)



onehot_encoder = OneHotEncoder(sparse=False)

integer_encoded = integer_encoded.reshape(len(integer_encoded), 1)
onehot_encoded = onehot_encoder.fit_transform(integer_encoded)

integer_encoded1 = integer_encoded1.reshape(len(integer_encoded1), 1)
onehot_encoded1 = onehot_encoder.fit_transform(integer_encoded1)

websites2 = websites1[["NI","%CPU","%MEM"]]

websites2["PR"] = onehot_encoded.tolist()
websites2["PR"] = onehot_encoded

websites2["COMMAND"] = onehot_encoded1.tolist()
websites2["COMMAND"] = onehot_encoded1

websites2 = websites2[["PR","NI","%CPU","%MEM","COMMAND"]]

filename = "finalized_model.sav"
# load the model from disk
loaded_model = joblib.load(filename)
result = loaded_model.predict(websites2)
print(result)

print(np.where(result == 1))
finalResult = websites.iloc[np.where(result == 1)]
finalResult = finalResult.drop_duplicates(subset=['PID'])
pid_list = finalResult.iloc[:, 0].tolist()
print(pid_list)

for i in pid_list:
    os.kill(i,signal.SIGKILL)


# In[ ]:




