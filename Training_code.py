#!/usr/bin/env python
# coding: utf-8

# In[1]:


# importing pandas library
import pandas as pd
  
# reading given csv file 
# and creating dataframe
websites = pd.read_csv("topfile.txt"
                       ,header = None)
  
# adding column headings
websites.columns = ['PID', 'USER', 'PR','NI','VIRT','RES','SHR','s','%CPU','%MEM','TIME+','COMMAND']

websites


# In[2]:


websites.nunique()


# In[3]:


websites = websites.dropna()


# In[4]:


websites.value_counts()


# In[5]:


websites = websites.drop_duplicates()


# In[6]:


websites.nunique()


# In[7]:


websites


# In[8]:


websites = websites[["PR","NI","%CPU","%MEM","COMMAND"]]

websites


# In[9]:


websites.dtypes


# In[10]:


#websites.to_csv("Final.csv")


# In[11]:


from sklearn.preprocessing import OneHotEncoder
from sklearn.preprocessing import LabelEncoder
from numpy import array
from numpy import argmax
enc = OneHotEncoder()
#values = array(websites["COMMAND"])
#print(values)


PR_Col = array(websites["PR"])
Command_Col = array(websites["COMMAND"])
print(PR_Col)
print(Command_Col)


# In[12]:


label_encoder = LabelEncoder()
integer_encoded = label_encoder.fit_transform(PR_Col)
integer_encoded1 = label_encoder.fit_transform(Command_Col)

print(integer_encoded)
print(integer_encoded1)


# In[13]:


onehot_encoder = OneHotEncoder(sparse=False)
integer_encoded = integer_encoded.reshape(len(integer_encoded), 1)
onehot_encoded = onehot_encoder.fit_transform(integer_encoded)
inverted = label_encoder.inverse_transform([argmax(onehot_encoded[30, :])])
print(onehot_encoded)
print(inverted)


integer_encoded1 = integer_encoded.reshape(len(integer_encoded1), 1)
onehot_encoded1 = onehot_encoder.fit_transform(integer_encoded1)
inverted1 = label_encoder.inverse_transform([argmax(onehot_encoded1[82, :])])

print(onehot_encoded1)
print(inverted1)


# In[14]:


websites1 = websites[["NI","%CPU","%MEM"]]

websites1


# In[15]:


websites1["PR"] = onehot_encoded.tolist()
websites1["PR"] = onehot_encoded

websites1


# In[19]:



websites1["COMMAND"] = onehot_encoded1.tolist()
websites1["COMMAND"] = onehot_encoded1


# In[20]:


websites1


# In[21]:


# importing pandas library
import pandas as pd
  
# reading given csv file 
# and creating dataframe
websites2 = pd.read_csv("Final.csv"
                       ,header = None)

websites2.columns = ["PR","NI","%CPU","%MEM","COMMAND","CLASS"]

websites2


# In[22]:


websites2 = websites2[["CLASS"]]


# In[23]:


X = websites1[["PR","NI","%CPU","%MEM","COMMAND"]]
y = websites2


# In[24]:


X


# In[26]:


y


# In[27]:


from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split

train_features, test_features, train_labels, test_labels = train_test_split(X, y, test_size = 0.25, random_state=42)


# In[28]:


from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

clf = SVC()
clf.fit(train_features,train_labels)

pred = clf.predict(test_features)


# In[29]:


from sklearn.metrics import accuracy_score

accuracy_score(pred,test_labels)


# In[30]:


import joblib

filename = 'finalized_model.sav'
joblib.dump(clf, filename)


# In[31]:


# load the model from disk
loaded_model = joblib.load(filename)
result = loaded_model.score(test_features, test_labels)
print(result)

pred = loaded_model.predict(test_features)
print(pred)


# In[ ]:




